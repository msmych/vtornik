name: Build Docker image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build fat jar
        run: ./gradlew check web:shadowJar

      - name: Build Docker image
        run: |
          docker build -t vtornik-web .
          docker tag vtornik-web msmych/vtornik-web:latest

      - name: Push image to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push msmych/vtornik-web:latest

      - name: Deploy to host
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            echo "Echo from Vtornik host"
            mkdir ~/vtornik || true
            cd ~/vtornik
            cat > docker-compose.yaml << EOL
            services:
              web:
                image: msmych/vtornik-web:latest
                ports:
                  - "8080:8080"
                environment:
                  PROFILE: DEV
                  APP_SECRET: '${DEV_APP_SECRET}'
                  DB_URL: '${DEV_DB_URL}'
                  DB_USERNAME: '${DEV_DB_USERNAME}'
                  DB_PASSWORD: '${DEV_DB_PASSWORD}'
                  GITHUB_CLIENT_ID: '${DEV_GITHUB_CLIENT_ID}'
                  GITHUB_CLIENT_SECRET: '${DEV_GITHUB_CLIENT_SECRET}'
                  TMDB_API_KEY: '${DEV_TMDB_API_KEY}'
            EOL
            cat docker-compose.yaml
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
            DEV_APP_SECRET="${{ secrets.DEV_APP_SECRET }}" \
              DB_URL="${{ secrets.DEV_DB_URL }}" \
              DB_USERNAME="${{ secrets.DEV_DB_USERNAME }}" \
              DB_PASSWORD="${{ secrets.DEV_DB_PASSWORD }}" \
              GITHUB_CLIENT_ID="${{ secrets.DEV_GITHUB_CLIENT_ID }}" \
              GITHUB_CLIENT_SECRET="${{ secrets.DEV_GITHUB_CLIENT_SECRET }}" \
              TMDB_API_KEY="${{ secrets.DEV_TMDB_API_KEY }}" \
            docker compose up -d 
